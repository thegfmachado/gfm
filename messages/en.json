{
  "metadata": {
    "title": "Gabriel Machado | Portfolio",
    "description": "Explore the portfolio of Gabriel Machado, senior developer."
  },
  "general": {
    "hero": {
      "title": {
        "firstLine": "Hi üëã,",
        "secondLine": "My name is",
        "thirdLine": "Since 2018 turning coffee into code."
      }
    },
    "tabs": {
      "about": "About",
      "experiences": "Experiences",
      "projects": "Projects",
      "feedbacks": "Feedbacks"
    }
  },
  "about": {
    "me": {
      "title": "About me",
      "description": "I am a developer who enjoys creating functional and effective web solutions. I seek challenges that allow me to transform ideas into concrete and useful projects while improving my skills and learning new tools and technologies. In my free time, I enjoy playing video games, watching series and movies, going out, and playing guitar.",
      "funFact": "Fun fact: Ask me anything about Skyrim or Elden Ring and I will probably know the answer üßô‚Äç‚ôÇÔ∏èüéÆ.",
      "birthday": "July 28, 1999"
    },
    "skills": {
      "title": "My tech stack",
      "core": "Core",
      "frameworks": "Frameworks & Libraries",
      "databases": "Databases",
      "tools": "Tools"
    },
    "education": {
      "title": "Academic background",
      "unip": {
        "course": "Associate's degree in system analysis and development.",
        "description": "<list><item>Programming Fundamentals;</item><item>Object-Oriented Systems Analysis;</item><item>Databases;</item><item>Web Programming;</item><item>Software Engineering;</item><item>Others.</item></list>",
        "startDate": "January 2018",
        "endDate": "December 2019"
      },
      "senai": {
        "course": "Information technology technical course.",
        "description": "<list><item>Algorithms;</item><item>Web Interfaces;</item><item>Databases;</item><item>Object-Oriented Programming;</item><item>Web Programming;</item><item>Mobile Device Programming.</item></list>",
        "startDate": "January 2015",
        "endDate": "December 2016"
      }
    }
  },
  "experiences": {
    "title": "Experiences",
    "philips": {
      "company": "Philips",
      "startDate": "December 2021",
      "endDate": "Present",
      "roles": {
        "senior": {
          "title": "Senior Software Developer",
          "description": "<list><item>Served as a code owner in the development and maintenance of a WYSIWYG editor/framework based on React, TypeScript, and SASS/CSS, ensuring technical quality and providing support to other developers via Philips' Stack Enterprise;</item> <item>Developed a telemedicine SaaS used by hospitals, covering database (PostgreSQL), backend (Node.js), frontend (React), and integration with the Twilio API;</item> <item>Developed the new EMR design system at Philips, which serves as the foundation for various products, including the Tasy system;</item> <item>Responsible for the table component in the design system, achieving high performance with TanStack Table and advanced optimizations in React;</item> <item>Implemented automated tests (UI with Playwright and unit tests with Jest) in all projects;</item> <item>Conducted code reviews and participated in strategic technical decision-making.</item></list>"
        }
      }
    },
    "meta": {
      "company": "Meta",
      "startDate": "May 2021",
      "endDate": "December 2021",
      "roles": {
        "middle": {
          "title": "Mid-level Front-End Developer",
          "description": "<list><item>Worked as a contracted developer providing services to Philips in the development and maintenance of a WYSIWYG editor/framework based on React, TypeScript, and SASS/CSS;</item> <item>Created features and provided ongoing support to ensure that other Philips development teams could use the editor, reducing development time for products;</item> <item>Provided a library of configurable components, each with APIs and custom events for flexible and efficient integration;</item> <item>Collaborated with Philips' internal teams to ensure that components met the specific needs of various projects, allowing for custom actions based on events and requirements.</item></list>"
        }
      }
    },
    "classSolutions": {
      "company": "Class Solutions",
      "startDate": "December 2018",
      "endDate": "May 2021",
      "roles": {
        "middle": {
          "title": "Mid-level Front-End Developer",
          "startDate": "January 2021",
          "endDate": "May 2021",
          "description": "<list><item>Delivered customized SharePoint systems using TypeScript, SASS, and frameworks like React and AngularJS;</item><item>Created internal libraries and reusable components to optimize productivity;</item><item>Automated processes in SharePoint, including the deployment of WSP packages;</item><item>Developed modern Web Parts using React;</item><item>Reviewed and developed technical tests for front-end candidates.</item><item>Conducted code reviews to ensure code quality.</item></list>"
        },
        "junior": {
          "title": "Junior Front-End Developer",
          "startDate": "January 2020",
          "endDate": "January 2021",
          "description": "<list><item>Developed internal systems in SharePoint using modern technologies like React and TypeScript;</item><item>Provided support and created reusable libraries for projects;</item><item>Implemented automations in SharePoint and assisted with deployments;</item><item>Collaborated in creating Web Parts with React;</item></list>"
        },
        "intern": {
          "title": "Software Development Intern",
          "startDate": "December 2018",
          "endDate": "January 2020",
          "description": "Learned and applied programming and web development concepts in internal projects."
        }
      }
    }
  },
  "projects": {
    "title": "Projects",
    "useTypewriter": {
      "title": "useTypewriter",
      "description": "It is a React hook for creating typewriter effects in any React based application. This effect simulates text being typed out and optionally erased, mimicking the way a typewriter operates. It's lightweight, performant, and designed with TypeScript for strong type-checking and versatility."
    },
    "lofiDino": {
      "title": "Lo-fi Dino",
      "description": "It is an application that lets you play any YouTube video while adding ambient sound effects, such as rain, birds, traffic, and more. Perfect for complementing your lofi experience or creating the ideal soundscape for focus, relaxation, or study.<br></br><br></br>This project was built with React.js + Vite.js using daisyUI as a component library and Tailwind CSS for styling."
    },
    "whatDoesTheFoxHad": {
      "title": "What does the fox had?",
      "description": "This project was developed as part of a practical study on web scraping, with the goal of consolidating the knowledge acquired through an agile and functional implementation. The application functions as an electronic medicine guide, offering a simple and effective solution to search for information about medications using the name on the packaging. The system centralizes the results in a quick and intuitive way, providing an efficient and complete search experience.<br></br><br></br>When performing a search, the user interacts with Next.js API Routes, which makes a request to the backend. The backend queries data sources, including the ANVISA API, which provides information directly from its official portal, as well as other portals such as D'or Mais Sa√∫de and Consulta Rem√©dios. These portals return the necessary data, which is then processed using the Cheerio library to extract the relevant information. After processing, the structured data is sent to the frontend and displayed in an organized manner to the user."
    },
    "gfm": {
      "title": "My Website",
      "description": "The purpose of this project is to centralize and present my portfolio in an organized manner. On the front-end, I used Next.js 15 along with Shadcn/UI for a modern and responsive interface. On the back-end, I opted for Next.js API Routes, integrated with Prisma and a PostgreSQL database to store user feedback. Additionally, I implemented website internationalization, taking advantage of Next.js routes to offer support for multiple languages."
    },
    "repo": "Repository",
    "website": "Website"
  },
  "feedbacks": {
    "title": "Leave a message!",
    "cta": "Click here",
    "form": {
      "title": "Your opinion matters!",
      "body": "Leave your feedback about the website. If we have worked together before, feel free to share your experience!",
      "fields": {
        "name": {
          "label": "Name",
          "placeholder": "Enter your name",
          "requiredError": "Name is required"
        },
        "siteUrl": {
          "label": "Website URL",
          "placeholder": "Enter a URL of your site/LinkedIn/GitHub"
        },
        "avatarUrl": {
          "label": "Avatar URL",
          "placeholder": "Enter the URL of your profile picture"
        },
        "message": {
          "label": "Message",
          "placeholder": "Leave your message about the website and/or our professional experience together :)",
          "requiredError": "Message is required"
        },
        "successToast": {
          "title": "Feedback sent!",
          "description": "Your feedback has been submitted and is pending review. Thank you for contributing!"
        },
        "errorToast": {
          "title": "Error sending feedback!",
          "description": "There was an issue submitting your feedback. Please try again later."
        }
      },
      "send": "Send feedback",
      "sending": "Sending..."
    },
    "pinned": "Pinned",
    "optional": "Optional"
  },
  "footer": {
    "made": "Made by",
    "with": "with",
    "and": "and"
  }
}
